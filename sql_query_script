--How many stores does the business have and in which countries?
SELECT country_code AS country,
	COUNT(country_code) AS total_no_stores
FROM
	dim_store_details
GROUP BY
	country_code
ORDER BY
	total_no_stores DESC;

-- Which locations currently have the most stores?
SELECT locality,
	COUNT(locality) AS total_no_stores
FROM
	dim_store_details
GROUP BY
	locality
ORDER BY
	total_no_stores DESC
LIMIT 7;

-- Which months produced the largest amount of sales?
SELECT ROUND(CAST((SUM(product_price * product_quantity)) AS numeric), 2) 
AS total_sales, 
    month
FROM 
    orders_table
JOIN
    dim_products
ON 
    orders_table.product_code = dim_products.product_code
JOIN 
    dim_date_times
ON 
    orders_table.date_uuid = dim_date_times.date_uuid
GROUP BY 
    month
ORDER BY 
    total_sales DESC
LIMIT 6;


-- How many sales are coming from online?

SELECT 
        COUNT(orders_table.date_uuid) AS number_of_sales,
        SUM(product_quantity) AS product_quantity_count,
        CASE 
            WHEN store_type = 'Web Portal' THEN 'Web'
            ELSE 'Offline'
        END AS location
FROM
    orders_table
JOIN
    dim_store_details
ON
    orders_table.store_code = dim_store_details.store_code
GROUP BY
    location
ORDER BY
    number_of_sales;

-- What percentage of sales come through each type of store?

SELECT store_type, 
    ROUND(CAST((SUM(product_price * product_quantity)) AS numeric), 2) 
    AS total_sales,
    ROUND(CAST((COUNT(orders_table.date_uuid) * 100.0) / 
             (SELECT COUNT(orders_table.date_uuid) 
             FROM orders_table 
             JOIN dim_products 
             ON orders_table.product_code = dim_products.product_code) AS numeric), 2) AS "percentage_total(%)"
FROM
    orders_table
JOIN
    dim_products
ON
    orders_table.product_code = dim_products.product_code
JOIN
    dim_store_details
ON 
    orders_table.store_code = dim_store_details.store_code
GROUP BY 
    store_type
ORDER BY
    total_sales DESC;


-- Which month in each year produced the highest cost of sales?

SELECT 
    ROUND(CAST((SUM(product_price * product_quantity)) AS numeric), 2) 
    AS total_sales,
    year,
    month
FROM 
    orders_table
JOIN
    dim_products
ON
    orders_table.product_code = dim_products.product_code

JOIN 
    dim_date_times
ON
    orders_table.date_uuid = dim_date_times.date_uuid
GROUP BY 
    month, year
ORDER BY
    total_sales DESC
LIMIT 
    10;


-- What is our staff headcount?

SELECT 
    SUM(staff_numbers) AS total_staff_numbers,
    country_code
FROM
    dim_store_details
GROUP BY
    country_code
ORDER BY
    total_staff_numbers DESC;


-- Which German store type is selling the most?

SELECT
ROUND(CAST((SUM(product_price * product_quantity)) AS numeric), 2) 
    AS total_sales,
    store_type,
    country_code
FROM 
    orders_table
JOIN
    dim_products
ON
    orders_table.product_code = dim_products.product_code
JOIN
    dim_store_details
ON 
    orders_table.store_code = dim_store_details.store_code
WHERE 
    country_code = 'DE'
GROUP BY
    store_type, country_code
ORDER BY 
    total_sales;

-- How quickly is the company making sales?

WITH time_differences AS (
    SELECT 
        year,
        CONCAT(year, '-', month, '-', day, ' ', timestamp) AS datetimestamp,
        EXTRACT(EPOCH FROM (LEAD((SELECT CONCAT(year, '-', month, '-', day, ' ', timestamp))::timestamp) 
        OVER (PARTITION BY year ORDER BY (SELECT CONCAT(year, '-', month, '-', day, ' ', timestamp))::timestamp) - (
        CONCAT(year, '-', month, '-', day, ' ', timestamp))::timestamp)) AS time_diff
    FROM dim_date_times
)
SELECT year,
    CONCAT('"hours": ', FLOOR(AVG(time_diff) / 3600), (', '),
        '"minutes": ', FLOOR((AVG(time_diff) % 3600) / 60),(', '),
        '"seconds": ', FLOOR(AVG(time_diff) % 60),(', '),
        '"milliseconds": ', ((AVG(time_diff) * 1000) % 1000)) AS actual_time_taken
FROM time_differences
GROUP BY year
ORDER BY AVG(time_diff) DESC
LIMIT 5;